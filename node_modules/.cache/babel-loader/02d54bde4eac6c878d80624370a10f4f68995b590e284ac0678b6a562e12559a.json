{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactTut\\\\keep-clone\\\\src\\\\components\\\\CreateNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../App.css';\nimport Button from '@mui/material/Button';\nimport { orange } from '@mui/material/colors';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateNote = props => {\n  _s();\n  const [expand, setExpand] = useState(false);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const InputEvent = event => {\n    // const value = event.target.value;\n    // const name = event.target.name;\n\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(preValue => {\n      return {\n        //use spread operator with setNote to access the prev value\n        ...preValue,\n        [name]: value\n      };\n    });\n  };\n  const AddEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  const expandIt = () => {\n    setExpand(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [expand ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: note.title,\n          onChange: InputEvent,\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          rows: \"\",\n          name: \"content\",\n          value: note.content,\n          onChange: InputEvent,\n          columns: \"\",\n          placeholder: \"Write a note...\",\n          onClick: expandIt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), expand ? /*#__PURE__*/_jsxDEV(Button, {\n          className: \"plus-sign\",\n          onClick: AddEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            sx: {\n              color: orange[600]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n};\n_s(CreateNote, \"27phMIACWuEkHATqAMf+KErjy5I=\");\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useState","Button","orange","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateNote","props","_s","expand","setExpand","note","setNote","title","content","InputEvent","event","name","value","target","preValue","AddEvent","passNote","expandIt","children","className","type","onChange","placeholder","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","rows","columns","onClick","sx","color","_c","$RefreshReg$"],"sources":["D:/ReactTut/keep-clone/src/components/CreateNote.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport '../App.css';\r\nimport Button from '@mui/material/Button';\r\nimport { orange } from '@mui/material/colors';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n \r\nconst CreateNote = (props) =>{\r\n\r\n    const [expand,setExpand] = useState(false);\r\n\r\n    const [note, setNote] = useState({\r\n        title:\"\",\r\n        content:\"\",\r\n    });\r\n\r\nconst InputEvent = (event) =>{\r\n\r\n    // const value = event.target.value;\r\n    // const name = event.target.name;\r\n    \r\n    const {name, value} = event.target;\r\n \r\n    setNote((preValue)=>{\r\n        return {\r\n            //use spread operator with setNote to access the prev value\r\n            ...preValue,\r\n            [name]: value,}\r\n            \r\n    });\r\n\r\n};\r\n\r\nconst AddEvent = () =>{\r\n    props.passNote(note); \r\n    setNote({\r\n        title:\"\",\r\n        content:\"\",\r\n    });\r\n}\r\nconst expandIt = () =>{\r\n    setExpand(true);\r\n}\r\n\r\n\r\n    return(\r\n        <>\r\n           <div className=\"main_note\">\r\n            <form>\r\n            {expand ? \r\n                <input \r\n\r\n                type=\"text\" \r\n                name=\"title\"\r\n                value={note.title} \r\n                onChange={InputEvent} \r\n                placeholder=\"Title\" \r\n                autoComplete=\"off\"\r\n            \r\n\r\n                /> : null}\r\n\r\n                <textarea \r\n                type=\"text\" \r\n                rows=\"\" \r\n                name=\"content\"\r\n                value={note.content} \r\n                onChange={InputEvent} \r\n                columns=\"\" \r\n                placeholder=\"Write a note...\"\r\n                onClick={expandIt}\r\n                >\r\n                </textarea>\r\n                {expand ? \r\n                <Button className=\"plus-sign\" onClick={AddEvent }> \r\n                <AddIcon sx={{ color: orange[600] }} />\r\n                </Button> : null }\r\n            </form>\r\n           </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateNote;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}